# -*- coding: utf-8 -*-
"""
/***************************************************************************
 GPM
                                 A QGIS plugin
 GPM Plugin 2to3 test
 Generated by Plugin Builder: http://g-sherman.github.io/Qgis-Plugin-Builder/
                             -------------------
        begin                : 2019-10-07
        copyright            : (C) 2019 by Hermesys
        email                : mhcho058@hermesys.co.kr
        git sha              : $Format:%H$
 ***************************************************************************/

/***************************************************************************
 *                                                                         *
 *   This program is free software; you can redistribute it and/or modify  *
 *   it under the terms of the GNU General Public License as published by  *
 *   the Free Software Foundation; either version 2 of the License, or     *
 *   (at your option) any later version.                                   *
 *                                                                         *
 ***************************************************************************/
 This script initializes the plugin, making it known to QGIS.
"""

import configparser
import logging
import os
import tempfile

import qgis.utils  # type: ignore

# print(qgis.core.Qgis.QGIS_VERSION)
# from qgis.core import QgsApplication
# from qgis.utils import plugins


def loggingTest():
    logging.basicConfig(
        filename="log_test.log",
        encoding="utf-8",
        level=logging.INFO,
        format="%(asctime)s - %(levelname)s - %(message)s",
    )

    config = configparser.ConfigParser()
    config.read(os.path.join(os.path.dirname(__file__), "metadata.txt"))

    plug_v = config.get("general", "version")
    plugin_v = "Plugin Version", plug_v
    qgis_v = qgis.core.Qgis.QGIS_VERSION
    # tmp = tempfile.tempdir = "/temp"
    logging.info(plugin_v)
    logging.info(qgis_v)
    # logging.info(tmp)

    try:
        logging.debug("debug")
        logging.warning("warning")
    except Exception as e:
        logging.error("error")
        logging.exception(f"An error occurred: {e}")


def classFactory(iface):
    """Load GPM class from file GPM.

    :param iface: A QGIS interface instance.
    :type iface: QgsInterface
    """
    #

    loggingTest()
    from .Util import util

    util().import_or_install("imageio")
    from .GPM import GPM

    return GPM(iface)
